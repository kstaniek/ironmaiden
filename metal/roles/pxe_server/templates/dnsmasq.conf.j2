# Disable DNS Server.
port=0
{% if dhcp_proxy %}
# We're DHCP proxying on the network of the homelab host
dhcp-range={{ ansible_default_ipv4.address }},proxy
pxe-service=X86-64_EFI, "Boot From Network, (UEFI)", ipxe.efi
{% else %}
# We're DHCP configuring on this range
dhcp-range={{ ansible_default_ipv4.network | ansible.netcommon.ipmath(1) }},{{ ansible_default_ipv4.broadcast | ansible.netcommon.ipmath(-1) }},{{ ansible_default_ipv4.netmask }},12h
dhcp-option=3,{{ ansible_default_ipv4.gateway }}
dhcp-option=option:dns-server,{{ dns_server }}

{% for item in groups['metal'] %}
dhcp-host={{ hostvars[item].mac }},{{ hostvars[item].ansible_host }},{{ item }}
{% endfor %}

{% for item in groups['minio'] %}
dhcp-host={{ hostvars[item].mac }},{{ hostvars[item].ansible_host }},{{ item }}
{% endfor %}
{% endif %}

# Match Arch Types efi x86 and x64
dhcp-match=set:efi-x86_64,option:client-arch,7
dhcp-match=set:efi-x86_64,option:client-arch,9
dhcp-match=set:ipxe,175

# Set the Boot file based on the tag from above
# dhcp-boot=tag:efi-x86_64,talos.ipxe
dhcp-boot=tag:!ipxe,ipxe.efi,172.31.30.1
dhcp-boot=tag:ipxe,"talos.ipxe",,172.31.30.1

# dhcp-vendorclass="HTTPClient"
# dhcp-option=60,"HTTPClient"
# dhcp-option=tag:efi-x86_64,option:filename,"http://172.31.30.1/talos"
# dhcp-boot=tag:ipxe,"http://172.31.30.1/talos/talos.ipxe"




# Log DHCP queries to stdout
log-queries
log-dhcp
log-facility=-

# Enable TFTP server
enable-tftp
tftp-root=/tftp
