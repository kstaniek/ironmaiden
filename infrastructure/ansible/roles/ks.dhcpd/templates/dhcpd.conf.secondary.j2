{{ ansible_managed | comment }}
# Generated by Ansible role {{ ansible_role_name }}

failover peer "failover-dhcp" {
  secondary; # This defines the secondary
  address {{ bind_secondary_server_address }};
  port {{ firewall_dhcp_failover_port }};
  peer address {{ bind_primary_server_address }};
  peer port {{ firewall_dhcp_failover_port }};
  max-response-delay 60;
  max-unacked-updates 10;
  load balance max seconds 3;
}

authoritative;
# allow booting;
# allow bootp;
next-server {{ tftp_next_server }}; # TFTP
# filename "pxelinux/pxelinux.0";
default-lease-time 86400; # 1 day
max-lease-time 86400; # 1 day

ddns-update-style interim;

update-static-leases on;
one-lease-per-client on;

# We generated the rndc-key when setting up DNS servers
key "rndc-key" {
  algorithm hmac-sha256;
  secret "{{ rndc_key }}";
};

{% for network in network_topology.networks %}
{% if 'dhcp' in network %}
# {{network['name']}}-{{network['vlan_id']}}
subnet {{ network.dhcp.subnet }} netmask {{ network.dhcp.mask }} {
{% for option, value in network.dhcp.options.items() %}
{% if option in ['root-path'] %}{% set qoute='"'%}{% else %}{% set qoute=""%}{% endif %}
  option {{option}} {{qoute}}{{value}}{{qoute}};
{% endfor %}
  option domain-name-servers 172.31.20.50, 172.31.20.51;
  option domain-name "home.staniek.name";
  option domain-search "home.staniek.name";
  pool {
    failover peer "failover-dhcp";
    range {{ network.dhcp.range.start }} {{ network.dhcp.range.end }};
  }
}
{% for host in network.hosts%}
{% if 'dhcp' in host %}
host {{ host.hostname }} {
  hardware ethernet {{ host.dhcp.mac }};
  fixed-address {{ host.address }};
  option host-name {{ host.hostname }};
{% if 'options' in host.dhcp %}
{% for option, value in host.dhcp.options.items() %}
{% if option in ['root-path'] %}{% set qoute='"'%}{% else %}{% set qoute=""%}{% endif %}
  option {{option}} {{qoute}}{{value}}{{qoute}};
{% endfor %}
{% endif %}
}
{% endif %}

{% endfor %}
{% endif %}

{% endfor %}
